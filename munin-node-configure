#!/bin/sh

export MUNIN_PLUGSTATE="/var/lib/munin-node/plugin-state/"
export MUNIN_LIBDIR="/usr/libexec/munin/"
SHELL=0
SUGGEST=1

case $1 in
--suggest)
	shift
	SUGGEST=1
;;
*)
;;
esac

# we can either find executable or filter plugins.history/plugins.sh
# finding executable is non portable accross Linux/BSD
case $(uname) in
Linux)
	TMP=$(mktemp)
	find /usr/libexec/munin/plugins -type f -executable |grep -iE 'sen|if|cpu|uptime' > $TMP
;;
*)
	echo "ERROR: not supported OS"
	exit 1
;;
esac

do_suggest() {
	p="$1"
	grep -q 'capabilities=.*suggest' $p
	if [ $? -ne 0 ];then
		echo "DEBUG: $p does not support suggest"
		return 0
	fi
	PNAME=$(basename $p)
	$p suggest > ${OUT}-suggest
	while read sug
	do
		if [ ! -e "/etc/munin/plugins/${PNAME}$sug" ];then
			echo "DEBUG: suggest $sug"
			echo "ln -s $p /etc/munin/plugins/${PNAME}$sug"
		fi
	done < ${OUT}-suggest
	rm ${OUT}-suggest
	return 1
}


OUT=$(mktemp)
while read p
do
	grep -q 'capabilities=.*autoconf' $p
	if [ $? -ne 0 ];then
		echo "DEBUG: $p does not support autoconf"
		continue
	fi
	PNAME=$(basename $p)
	echo "TRY $p"
	$p autoconf > $OUT
	cat $OUT
	grep -q '^yes' $OUT
	if [ $? -eq 0 ];then
		if [ $SUGGEST -eq 1 ];then
			do_suggest $p
			if [ $? -eq 0 ];then
				echo "ln -s $p /etc/munin/plugins/$PNAME"
			fi
		else
			echo "ln -s $p /etc/munin/plugins/$PNAME"
		fi
	fi
done < $TMP

rm $OUT
rm $TMP
